on: pull_request
name: Check and lint

jobs:
  review_codestyle:
    name: Codestyle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.2
          coverage: none
      - name: Install Dependencies
        run: composer install --no-interaction --no-progress
      - name: Run phpcs
        uses: reload/action-phpcs@main
        with:
          reviewdog_token: ${{ secrets.GITHUB_TOKEN }}

  static_code_analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.2
          coverage: none
      - name: Install Reviewdog
        run: |
          wget -O - -q https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s -- -b $PWD/ latest
      - name: Install Dependencies
        run: |
          composer install --no-interaction --no-progress
      - name: Static code analysis
        run: |
          php -d memory_limit=1G vendor/bin/phpstan analyse . --error-format=checkstyle | ./reviewdog -f=checkstyle -name=PHPStan -reporter=github-pr-check
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  unit_tests:
    name: PHPUnit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.2
          coverage: none
      - name: Install Dependencies
        run: |
          composer install --no-interaction --no-progress
      - name: Unit tests
        run: |
          vendor/bin/phpunit

  hadolint:
    name: Hadolint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@v3.1.0

  markdown_lint:
    name: Markdown lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install problem matcher
        uses: xt0rted/markdownlint-problem-matcher@v3
      - name: Lint README.md file
        uses: nosborn/github-action-markdown-cli@v3.3.0
        with:
          files: './README.md'

  docker_build:
    name: Test Docker build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build docker image
        run: docker build -t reload/drupal-security-jira:test .
      - name: Test image
        run: docker run --rm reload/drupal-security-jira:test --version
